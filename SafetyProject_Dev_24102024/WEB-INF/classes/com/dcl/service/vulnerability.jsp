<!DOCTYPE html>
<html>
<head>
<title>Vulnerability Reporting Dashboard</title>
<link rel="stylesheet" type="text/css"
	href="https://cdn.datatables.net/1.10.21/css/jquery.dataTables.css">
<link rel="stylesheet" type="text/css"
	href="https://cdn.datatables.net/buttons/1.7.1/css/buttons.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<link
	href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
	rel="stylesheet">
<script type="text/javascript" charset="utf8"
	src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.js"></script>
<script type="text/javascript" charset="utf8"
	src="https://cdn.datatables.net/buttons/1.7.1/js/dataTables.buttons.min.js"></script>
<script type="text/javascript" charset="utf8"
	src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.html5.min.js"></script>
<script type="text/javascript" charset="utf8"
	src="https://cdn.datatables.net/buttons/1.7.1/js/buttons.print.min.js"></script>
<script type="text/javascript" charset="utf8"
	src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
<script type="text/javascript" charset="utf8"
	src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
<script type="text/javascript" charset="utf8"
	src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<link
	href="https://cdn.jsdelivr.net/npm/apexcharts@3.35.3/dist/apexcharts.css"
	rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/apexcharts@3.35.3"></script>
<style>
body {
	display: flex;
	flex-direction: column;
	height: 100vh;
}

.main-content {
	flex: 1;
	margin-left: 100px; /* width of the sidebar */
	padding: 15px;
}

.dataTables_length {
	float: left;
}

.dataTables_filter {
	float: right;
}

.dataTables_info {
	float: left;
	margin-left: 20px;
}

.dataTables_paginate {
	float: left;
	margin-right: 20px;
}

.custom-select {
	width: 100%;
	padding: 5px;
	border: 1px solid #ccc;
	border-radius: 4px;
	background-color: #f9f9f9;
	font-size: 14px;
}

.dataTables_wrapper .dataTables_paginate .paginate_button {
	padding: 5px 10px;
	margin: 2px;
	border: 1px solid #ddd;
	border-radius: 4px;
	background-color: #f9f9f9;
	color: #333;
	cursor: pointer;
}

.dataTables_wrapper .dataTables_paginate .paginate_button:hover {
	background-color: #e9e9e9;
	border-color: #ccc;
}

.dataTables_wrapper .dataTables_paginate .paginate_button.current {
	background-color: #007bff;
	border-color: #007bff;
	color: #fff;
}

#chartone {
	width: 100%;
	max-width: 650px;
	margin: 35px auto;
}

#charttwo {
	width: 100%;
	max-width: 650px;
	margin: 35px auto;
}

@media ( min-width : 768px) {
	#charttwo {
		width: 80%;
	}
}
</style>
<script>
document.getElementById('expandBtn').addEventListener('click',
		function() {
			var sidebar = document.getElementById('sidebar');
			if (sidebar.classList.contains('active')) {
				sidebar.classList.remove('active');
				this.textContent = 'Reports';
			} else {
				sidebar.classList.add('active');
				this.textContent = 'Collapse';
			}
		});
</script>
<%@ page import="org.json.*, java.text.*,java.util.*"%>
</head>
<body>
	<%
		JSONObject empdtlVulnerability = (JSONObject) request.getSession().getAttribute("empdtl");
		if (empdtlVulnerability.has("vulnerabilityArray")) {
	%>

	<div class="main-content">
		<div id="vulnrpage" class="page">
			<div class="row">
				<div class="col-lg-6 col-md-6 col-sm-12 col-12">
					<div id="info">
						<h2>Office-Wise Vulnerabiltiy Summary</h2>
						<p>Summary of the vulnerabilities assigned to individual site
							offices.</p>
						<%
							JSONArray vulnerabilityArray = empdtlVulnerability.getJSONArray("vulnerabilityArray");

								String vulnrChart1FileName = empdtlVulnerability.getString("inspChart1FileName");

								String chartStrForInspectedVulnerability = empdtlVulnerability.getString("chartStrForInspected");
								String chartStrForRectifiedVulnerability = empdtlVulnerability.getString("chartStrForRectified");
								String officeListForChartVulnerability = empdtlVulnerability.getString("officeListForChart");

								String chart2StrForIdentifiedVulnerability = empdtlVulnerability
										.getString("chart2StrForVulnrIdentified");
								String chart2StrForRectifiedVulnerability = empdtlVulnerability.getString("chart2StrForVulnrRectified");
						%>

					</div>
					<div id="chartone"></div>
				</div>
				<div class="col-lg-6 col-md-6 col-sm-12 col-12">
					<div id="info">
						<h2>Vulnerability Summary as per Status</h2>
						<p>Summary of the vulnerabilities assigned to site offices
							till date.</p>
					</div>
					<div id="charttwo"></div>
				</div>
			</div>
			<div class="row">
				<div class="col-lg-12 col-md-12 col-sm-12 col-12">
					<table id="vulnrtable" class="display"
						style="width: 100%; font-size: 12px;">
						<thead>
							<tr>
								<th>Site ID</th>
								<th>Insp.ID</th>
								<th>Calendar Month</th>
								<th>Inspected By</th>
								<th>Inspected On</th>
								<th>Under</th>
								<th>Office Type</th>
								<th>Longitude</th>
								<th>Longitude</th>
								<th>Network</th>
								<th>Asset</th>
								<th>Problem</th>
								<th>Status</th>
							</tr>
						</thead>
						<tfoot>
							<tr>
								<th>Site ID</th>
								<th>Insp.ID</th>
								<th>Calendar Month</th>
								<th>Inspected By</th>
								<th>Inspected On</th>
								<th>Under</th>
								<th>Office Type</th>
								<th>Longitude</th>
								<th>Longitude</th>
								<th>Network</th>
								<th>Asset</th>
								<th>Problem</th>
								<th>Status</th>
							</tr>
						</tfoot>
						<tbody>
							<%
								for (int i = 0; i < vulnerabilityArray.length(); i++) {
										JSONObject buffjsonObj = vulnerabilityArray.getJSONObject(i);
							%>
							<tr>
								<td><%=(buffjsonObj.get("site_id").toString())%></td>
								<td><%=(buffjsonObj.get("inspection_id").toString())%></td>
								<td><%=(buffjsonObj.get("month").toString())%></td>
								<td><%=(buffjsonObj.get("inspection_by").toString())%></td>
								<td><%=(buffjsonObj.get("inspected_on").toString())%></td>
								<td><%=(buffjsonObj.get("office_name").toString())%></td>
								<td><%=(buffjsonObj.get("office_type").toString())%></td>
								<td><%=String.format("%.4f", (buffjsonObj.getDouble("latitude")))%></td>
								<td><%=String.format("%.4f", (buffjsonObj.getDouble("longitude")))%></td>
								<td><%=(buffjsonObj.get("network_type").toString())%></td>
								<td><%=(buffjsonObj.get("asset_name").toString())%></td>
								<td><%=(buffjsonObj.get("problem_type").toString())%></td>
								<td><%=(buffjsonObj.get("present_status").toString())%></td>
							</tr>
							<%
								}
							%>
						</tbody>
					</table>
				</div>
			</div>

		</div>
	</div>


	<script>
	var chartone = null;
	 document.addEventListener('DOMContentLoaded', function () {
         var options = {
             chart: {
                 type: 'pie',
                 height: 350
             },
             series: [<%=chartStrForInspectedVulnerability%>], // Data for each category
             labels: [<%=officeListForChartVulnerability%>],
             legend: {
                 position: 'bottom',
                 markers: {
                     width: 12,
                     height: 12,
                     radius: 12
                 },
                 onItemClick: {
                     toggleDataSeries: true
                 }
             },
             dataLabels: {
                 enabled: true,
                 formatter: function (val, opts) {
                     return opts.w.config.series[opts.seriesIndex];
                 }
             },
             tooltip: {
                 enabled: true,
                 y: {
                     formatter: function (val) {
                         return val;
                     }
                 }
             },
             plotOptions: {
                 pie: {
                     expandOnClick: true,
                     donut: {
                         size: '65%'
                     }
                 }
             },
             fill: {
                 type: 'gradient'
             },
             states: {
                 hover: {
                     filter: {
                         type: 'darken',
                         value: 0.15
                     }
                 }
             }
         };
         document.querySelector("#chartone").innerHTML='';
         chartone=  new ApexCharts(document.querySelector("#chartone"), options);
         chartone.render();
     });
	
		
		$(document)
				.ready(
						function() {
							var table = $('#vulnrtable').DataTable(
											{
												dom : '<"top"Bf>rt<"bottom"ilp><"clear">',
												lengthMenu : [
														[ 10, 25, 50, -1 ],
														[ 10, 25, 50, "All" ] ],
														columns: [
												            { "data": "site_id", "visible": true },
												            { "data": "inspection_id", "visible": true },
												            { "data": "month", "visible": true },
												            { "data": "inspection_by", "visible": true },
												            { "data": "inspected_on", "visible": true },
												            { "data": "office_name", "visible": true },
												            { "data": "office_type", "visible": true },
												            { "data": "latitude", "visible": true },
												            { "data": "longitude", "visible": true },
												            { "data": "network_type", "visible": true },
												            { "data": "asset_name", "visible": true },
												            { "data": "problem_type", "visible": true },
												            { "data": "present_status", "visible": true }
												        ],

												fixedColumns : {
													start : 2
												},
												layout : {
													topStart : {
														buttons : [ 'colvis' ]
													}
												},
												paging : false,
												scrollCollapse : true,
												scrollX : true,
												scrollY : 300,
												buttons : [
														{
															extend : 'copyHtml5',
															title : '<%=vulnrChart1FileName%>',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'excelHtml5',
                    title: '<%=vulnrChart1FileName%>',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'pdfHtml5',
                    title: '<%=vulnrChart1FileName%>',
                    orientation: 'landscape', // Set the orientation to landscape
                    pageSize: 'LEGAL', // Set the page size to Legal
                    exportOptions: {
                        columns: ':visible'
                    },
                    customize: function (doc) {
                        doc.content[1].table.widths = '*'.repeat(doc.content[1].table.body[0].length).split('');
                    }
                },
                {
                    extend: 'print',
                    title: '<%=vulnrChart1FileName%>
		',
															exportOptions : {
																columns : ':visible'
															}
														} ],
												columnDefs : [ {
													targets : [ 3, 4 ],
													visible : false
												} ],
												initComplete : function() {
													this
															.api()
															.columns()
															.every(
																	function() {
																		var column = this;

																		// Create select element
																		var select = document
																				.createElement('select');
																		select.className = 'custom-select';
																		select
																				.add(new Option(
																						''));
																		column
																				.footer()
																				.replaceChildren(
																						select);

																		// Apply listener for user change in value
																		select
																				.addEventListener(
																						'change',
																						function() {
																							column
																									.search(
																											select.value)
																									.draw();
																						});

																		// Add list of options
																		column
																				.data()
																				.unique()
																				.sort()
																				.each(
																						function(
																								d,
																								j) {
																							select
																									.add(new Option(
																											d));
																						});
																	});
												}
											});

							var vulnroptionstwo = {
								chart : {
									width : "100%",
									height : 380,
									type : "bar",
									stacked : false
								},
								plotOptions : {
									bar : {
										horizontal : true
									}
								},
								dataLabels : {
									enabled : true
								},
								stroke : {
									width : 1,
									colors : [ "#fff" ]
								},
								series : [
										{
											name : "In Progress",
											data : [
	<%=chart2StrForIdentifiedVulnerability%>
		]
										},
										{
											name : "Resolved",
											data : [
	<%=chart2StrForRectifiedVulnerability%>
		]
										} ],
								xaxis : {
									categories : [
	<%=officeListForChartVulnerability%>
		]
								},
								yaxis : {
									title : {
										text : 'Number'
									}
								},
								legend : {
									position : "right",
									verticalAlign : "top",
									containerMargin : {
										left : 35,
										right : 60
									}
								},
								responsive : [ {
									breakpoint : 1000,
									options : {
										plotOptions : {
											bar : {
												horizontal : false
											}
										},
										legend : {
											position : "bottom"
										}
									}
								} ]
							};

							var charttwo = new ApexCharts(document
									.querySelector("#charttwo"),
									vulnroptionstwo);

							charttwo.render();

							table.on('draw', function() {
								var selectedData = table.rows({
									search : 'applied'
								}).data().toArray();
								$(this).toggleClass('selected');
								updateChart1();

							});

							$('#vulnrtable tbody').on('click', 'tr',
									function() {
										var selectedData = table.rows({
											search : 'applied'
										}).data().toArray();
										$(this).toggleClass('selected');
										updateChart1();

									});

							//	updateChart1(); // Initial chart update

							function updateChart1() {

								var data = table.rows({
									search : 'applied'
								}).data().toArray();
								//alert( JSON.stringify(data));

								var chartFlagValue = "chartone";

								$
										.ajax({
											url : 'updVulnrChrt',
											type : 'POST',
											contentType : 'application/json',
											data : JSON
													.stringify({
														chartFlagValue : chartFlagValue,
														data : data
													}),
											success : function(response) {
												var categories = response.labels;
												var values = response.series;

												//alert(categories);
												//alert(values);

												//    if (!chartone) {
												var options = {
													chart : {
														type : 'pie',
														height : 350
													},
													series : values,
													labels : categories,
													legend : {
														position : 'bottom',
														markers : {
															width : 12,
															height : 12,
															radius : 12
														},
														onItemClick : {
															toggleDataSeries : true
														}
													},
													dataLabels : {
														enabled : true,
														formatter : function(
																val, opts) {
															return opts.w.config.series[opts.seriesIndex];
														}
													},
													tooltip : {
														enabled : true,
														y : {
															formatter : function(
																	val) {
																return val;
															}
														}
													},
													plotOptions : {
														pie : {
															expandOnClick : true,
															donut : {
																size : '65%'
															}
														}
													},
													fill : {
														type : 'gradient'
													},
													states : {
														hover : {
															filter : {
																type : 'darken',
																value : 0.15
															}
														}
													}
												};
												document
														.querySelector("#chartone").innerHTML = '';
												chartone = new ApexCharts(
														document
																.querySelector("#chartone"),
														options);
												chartone.render();

												updateChart2(data);
											},
											error : function(xhr, status, error) {
												console
														.error(
																'Error fetching data from servlet:',
																xhr, status,
																error);
											}
										});
							}

							function updateChart2(selectedData) {
								var chartFlagValue = "charttwo";
								$.ajax({
									url : 'updVulnrChrt',
									type : 'POST',
									contentType : 'application/json',
									data : JSON.stringify({
										chartFlagValue : chartFlagValue,
										data : selectedData
									}),
									success : function(response) {
										$('#charttwo').html(response);
									},
									error : function(xhr, status, error) {
										console.error('Error fetching data:',
												error);
									}
								});
							}

						});

		function showPage(pageId) {
			$('.page').hide();
			$('#' + pageId).show();
		}
	</script>
	<%
		} else {
	%>
	No data
	<%
		}
	%>
</body>
</html>